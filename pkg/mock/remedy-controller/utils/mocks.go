// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gardener/remedy-controller/pkg/utils (interfaces: ExpiringCache)

// Package utils is a generated GoMock package.
package utils

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockExpiringCache is a mock of ExpiringCache interface.
type MockExpiringCache struct {
	ctrl     *gomock.Controller
	recorder *MockExpiringCacheMockRecorder
}

// MockExpiringCacheMockRecorder is the mock recorder for MockExpiringCache.
type MockExpiringCacheMockRecorder struct {
	mock *MockExpiringCache
}

// NewMockExpiringCache creates a new mock instance.
func NewMockExpiringCache(ctrl *gomock.Controller) *MockExpiringCache {
	mock := &MockExpiringCache{ctrl: ctrl}
	mock.recorder = &MockExpiringCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExpiringCache) EXPECT() *MockExpiringCacheMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockExpiringCache) Delete(arg0 interface{}) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Delete", arg0)
}

// Delete indicates an expected call of Delete.
func (mr *MockExpiringCacheMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockExpiringCache)(nil).Delete), arg0)
}

// Get mocks base method.
func (m *MockExpiringCache) Get(arg0 interface{}) (interface{}, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockExpiringCacheMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockExpiringCache)(nil).Get), arg0)
}

// Set mocks base method.
func (m *MockExpiringCache) Set(arg0, arg1 interface{}, arg2 time.Duration) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Set", arg0, arg1, arg2)
}

// Set indicates an expected call of Set.
func (mr *MockExpiringCacheMockRecorder) Set(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockExpiringCache)(nil).Set), arg0, arg1, arg2)
}
